#!/usr/bin/env ruby

module Relisp
  TERMINAL_STRING   = "__xxxxxOVERANDOUTxxxxx__"
  OVER_STRING       = "__>>>>>ROGEROVER>>>>>>__"
  RUBY_ERROR_STRING = "__RUBYERROR_HOWCANTHATBE__"

  def self.elisp_eval(code)
    puts code
    puts OVER_STRING

    elisp_return = String.new
    until gets.strip == TERMINAL_STRING
      elisp_return << $_
    end
    return elisp_return
  end

  def self.start_controller
    [TERMINAL_STRING, OVER_STRING, RUBY_ERROR_STRING].each do |constant|
      gets # wait for communication from emacs
      puts constant
    end

    begin
      local_binding = binding
    
      loop do
        code = String.new
        until gets.strip == TERMINAL_STRING
          code << $_
        end
        puts (eval code, local_binding).to_s
        puts TERMINAL_STRING
      end
    rescue => dag_yo
      puts dag_yo
      puts RUBY_ERROR_STRING
    end
  end 
end

def ruby_sample_method
  val = Relisp.elisp_eval("(+ 1 3)")
  return val.to_i + 3
end

Relisp.start_controller
